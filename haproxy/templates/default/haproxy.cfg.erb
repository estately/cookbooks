########################################################################
### NOTICE: this file managed by chef; changes made here will be lost.
########################################################################

global
    log     127.0.0.1 local0 debug # log to local0 facility at debug
    maxconn 4096                   # total max connections (dependent on ulimit)
    daemon                         # daemonize

defaults
    mode    http       # proxy http requests
    balance roundrobin # evenly balance requests

    timeout client  300000 # maximum inactivity time on the client side
    timeout server  300000 # maximum inactivity time on the server side
    timeout connect 10000  # maximum time to wait for a connection attempt to a server to succeed

    option httpclose    # disable keepalive (HAProxy does not yet support the HTTP keep-alive mode)
    option abortonclose # enable early dropping of aborted requests from pending queue
    option redispatch   # redistribute requests destined for sick backends
    option forwardfor   # enable insert of X-Forwarded-For headers

<% if node.haproxy.stats.enabled %>
  # enable web-stats at /haproxy?stats
  stats enable
  stats auth    <%= node.haproxy.stats.username %>:<%= node.haproxy.stats.password %>
  stats refresh 5s
<% end %>

<% node.haproxy.proxies.each do |name, settings| %>
listen <%= name %> 127.0.0.1:<%= settings[:port] %>
    <% if settings[:http_check] %>
    option httpchk <%= settings[:http_check] %>
    <% end %>
    <% settings[:workers].times do |worker_id|
            worker_port = settings[:port] + 1000 + worker_id
            worker_name = [ name, worker_port ].join('_')
    %>
    server <%= worker_name %> 127.0.0.1:<%= worker_port %> maxconn 1 check
    <% end %>

<% end %>
